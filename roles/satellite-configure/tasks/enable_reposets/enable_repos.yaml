---

- name: Get available repositories
  uri:
    url: "https://localhost/katello/api/products/{{ result.resources[0]['product']['id'] }}/repository_sets/{{ result.resources[0]['id'] }}/available_repositories"
    url_username: "{{ admin_username }}"
    url_password: "{{ admin_password }}"
    validate_certs: false
    force_basic_auth: True
  register: available
  tags:
    - satellite-configure
    - satellite-configure-reposets

- name: "First entry"
  when: "(available.json.results[0].substitutions.releasever is defined and '.' not in available.json.results[0].substitutions.releasever) or available.json.results[0].substitutions.releasever is not defined"
  set_fact:
    repo: "[ {{ available.json.results[0] }} ]"
  tags:
    - satellite-configure
    - satellite-configure-reposets

- name: "First 3 entries"
  when: "(available.json.results[0].substitutions.releasever is defined and '.' in available.json.results[0].substitutions.releasever) or available.json.results[0].substitutions.releasever is not defined"
  set_fact:
    repo: "{{ available.json.results[0:3] }}"
  tags:
    - satellite-configure
    - satellite-configure-reposets

- name: Enable Repos
  theforeman.foreman.repository_set:
    username: "{{ admin_username }}"
    password: "{{ admin_password }}"
    server_url: "https://localhost"
    validate_certs: false
    organization: "{{ organization }}"
    label: "{{ result.resources[0].label }}"
    repositories: "{{ repo | map('json_query','{ basearch: substitutions.basearch, releasever:substitutions.releasever }') | list }}"
    state: enabled
  tags:
    - satellite-configure
    - satellite-configure-reposets

#TODO: Set Kickstart repos to immediate download policy
#- name: Set kickstart repos to immediate
#  when: '"Kickstart" in item.name'
#  with_items: "{{ repo }}"
#  theforeman.foreman.repository:
#    username: "{{ admin_username }}"
#    password: "{{ admin_password }}"
#    server_url: "https://localhost"
#    validate_certs: false
#    organization: "{{ organization }}"
#    name: "{{ item.name }}"
#    state: present
#    content_type: yum
#    product: "{{ result.resources[0]['product']['name'] }}"
#    download_policy: immediate