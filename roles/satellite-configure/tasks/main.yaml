---
- name: Check if persistent variables file exists
  delegate_to: localhost
  stat:
    path: "{{ playbook_dir }}/persistent.yaml"
  register: persistent_exists
  tags:
    - always

- name: Import persistent variables
  when: persistent_exists.stat.exists
  include_vars:
    file: "{{ playbook_dir }}/persistent.yaml"
  tags:
    - always

- name: Install Manifest
  include_tasks: "{{ role_path }}/tasks/manifest.yaml"
  tags:
    - satellite-configure
    - satellite-configure-manifest

- name: Enable Reposets and Add Custom Repos
  include_tasks: "{{ role_path }}/tasks/enable_reposets.yaml"
  tags:
    - satellite-configure
    - satellite-configure-reposets

- name: Create Daily Syncplan
  include_tasks: "{{ role_path }}/tasks/syncplan.yaml"
  tags:
    - satellite-configure
    - satellite-configure-syncplan

- name: Sync all repos
  include_tasks: "{{ role_path }}/tasks/sync.yaml"
  tags:
    - satellite-configure
    - satellite-configure-syncrepos

- name: Create Lifecycles
  include_tasks: "{{ role_path }}/tasks/lifecycles.yaml"
  tags:
    - satellite-configure
    - satellite-configure-lifecycles

- name: Create Content Views
  include_tasks: "{{ role_path }}/tasks/contentviews.yaml"
  tags:
    - satellite-configure
    - satellite-configure-contentviews

- name: Configure Compute Resources
  include_tasks: "{{ role_path }}/tasks/computeresources.yaml"
  tags:
    - satellite-configure
    - satellite-configure-computeresources

# If you're reading this, I'm sorry. Writing recursion without variable scoping is complicated.
- name: Create Host Groups
  include_tasks: "{{ role_path }}/tasks/hostgroups.yaml"
  tags:
    - satellite-configure
    - satellite-configure-hostgroups
    
- name: Configure Subnets
  include_tasks: "{{ role_path }}/tasks/subnets.yaml"
  tags:
    - satellite-configure
    - satellite-configure-subnets

- name: Demo management
  when: deployment == 'demo'
  set_fact:
    curr_plays: "{{ always_ansible_plays + demo_ansible_plays }}"
    curr_roles: "{{ always_ansible_roles + demo_ansible_roles }}"
    curr_puppet: "{{ always_puppet + demo_puppet }}"
  tags:
    - always

- name: Prod management
  when: deployment == 'prod'
  set_fact:
    curr_plays: "{{ always_ansible_plays + prod_ansible_plays }}"
    curr_roles: "{{ always_ansible_roles + prod_ansible_roles }}"
    curr_puppet: "{{ always_puppet + prod_puppet }}"
  tags:
    - always

- name: Configure Ansible for client management
  include_tasks: "{{ role_path }}/tasks/ansible.yaml"
  tags:
    - satellite-configure
    - satellite-configure-ansible

- name: Configure Puppet for client management
  include_tasks: "{{ role_path }}/tasks/puppet.yaml"
  tags:
    - satellite-configure
    - satellite-configure-puppet
