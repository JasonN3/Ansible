---

- name: Stage variables
  set_fact:
    extra_args: ""

- name: Enable Compute Resources
  when: '"--enable-foreman-compute-{{ item.type }}" not in extra_args'
  set_fact:
    extra_args: "{{ extra_args }} --enable-foreman-compute-{{ item.type }}"
  with_items: "{{ compute_resources }}"
  tags:
    - compute

- name: Check certificate requirements
  when: certificate is defined and certificate != {}
  tags:
    - custom-certificate
  block:
  - name: Check cert_file
    when: certificate.cert_file is not defined or certificate.cert_file == ""
    fail:
      msg: "certificate.cert_file must be defined"
  
  - name: Check key_file
    when: certificate.key_file is not defined or certificate.key_file == ""
    fail:
      msg: certificate.key_file must be defined
  
  - name: Check ca_bundle
    when: certificate.ca_bundle is not defined or certificate.ca_bundle == ""
    fail:
      msg: certificate.ca_bundle must be defined

  - name: Create certificate location on server
    become: true
    ansible.builtin.file:
      path: /root/satellite_certificate
      state: directory
      mode: '0700'

  - name: Copy cert_file to server
    become: true
    copy:
      src: "{{ certificate.cert_file }}"
      dest: "/root/satellite_certificate/cert_file.pem"

  - name: Copy key_file to server
    become: true
    copy:
      src: "{{ certificate.key_file }}"
      dest: "/root/satellite_certificate/key_file.pem"

  - name: Copy ca_bundle to server
    become: true
    copy:
      src: "{{ certificate.ca_bundle }}"
      dest: "/root/satellite_certificate/ca_bundle.pem"

  - name: Enable Custom Certificate
    set_fact:
      extra_args: "{{ extra_args }} --certs-server-cert /root/satellite_certificate/cert_file.pem --certs-server-key /root/satellite_certificate/key_file.pem --certs-server-ca-cert /root/satellite_certificate/ca_bundle.pem"

- name: Set useful features
  set_fact:
    extra_args: "{{ extra_args }} --{{ item }}"
  with_items: "{{ useful_features }}"
  tags:
    - useful-features

- name: Set additional features
  set_fact:
    extra_args: "{{ extra_args }} --{{ item }}"
  with_items: "{{ additional_features }}"
  tags:
    - additional-features

# TODO: If DHCP and DNS, set DHCP option for DNS
# --foreman-proxy-dhcp-nameservers {{ self-ip }}

- name: Generate and save admin password
  when: admin_password is not defined or admin_password == ""
  block:
    - name: Generate random password
      set_fact:
        gen_password: "{{ lookup('ansible.builtin.password', '/dev/null length=20') }}"
    - name: Create persistent.yaml
      local_action:
        module: file
        path: "{{ playbook_dir }}/persistent.yaml"
        state: touch
    - name: Save password
      local_action:
        module: lineinfile
        path: "{{ playbook_dir }}/persistent.yaml"
        line: "admin_password: {{ gen_password }}"
    - name: Store password
      set_fact:
        admin_password: "{{ gen_password }}"

- name: Install Satellite
  become: true
  command:
    cmd: satellite-installer --scenario satellite {{ extra_args }} --foreman-initial-organization {{ organization | quote }} --foreman-initial-location {{ location | quote }} --foreman-initial-admin-username {{ admin_username | quote }} --foreman-initial-admin-password {{ admin_password | quote }}
  tags:
    - install-satellite

- name: Install redhat-access-insights-puppet
  when: useful_features contains "puppet-server=true"
  become: true
  ansible.builtin.dnf:
    name: redhat-access-insights-puppet
    state: installed
    disable_plugin: foreman-protector
