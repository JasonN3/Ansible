---
- name: Check if persistent variables file exists
  delegate_to: localhost
  stat:
    path: "{{ playbook_dir }}/persistent.yaml"
  register: persistent_exists
  tags:
    - manifest
    - reposets
    - syncplan
    - sync
    - lifecycle
    - content_view
    - hostgroups
    - compute_resources
    - "4"
    - "5"
    - "6"
    - "7"
    - "8"

- name: Import persistent variables
  when: persistent_exists.stat.exists
  include_vars:
    file: "{{ playbook_dir }}/persistent.yaml"
  tags:
    - manifest
    - reposets
    - syncplan
    - sync
    - lifecycle
    - content_view
    - hostgroups
    - compute_resources
    - "4"
    - "5"
    - "6"
    - "7"
    - "8"

- name: Check for manifest file
  when: manifest_file is defined and manifest_file != ""
  delegate_to: localhost
  stat:
    path: "{{ manifest_file }}"
  register: manifest_exists
  tags: 
    - manifest
    - "4"

- name: Fail if manifest file doesn't exist
  when: manifest_file is not defined or manifest_file == "" or manifest_exists.stat.exists == false
  fail:
    msg: Manifest file must be defined and exist
  tags:
    - manifest
    - "4"

- name: Copy manifest to Satellite server
  become: true
  copy:
    src: "{{ manifest_file }}"
    dest: "/root/manifest.zip"
  tags:
    - manifest
    - "4"

- name: Add Subscription Manifest
  become: true
  theforeman.foreman.subscription_manifest:
    username: "{{ admin_username }}"
    password: "{{ admin_password }}"
    server_url: "https://localhost"
    validate_certs: false
    organization: "{{ organization }}"
    state: present
    manifest_path: "/root/manifest.zip"
  tags:
    - manifest
    - "4"

- name: Get Repository Set info
  with_items: "{{ recommended_repos }}"
  theforeman.foreman.resource_info:
    username: "{{ admin_username }}"
    password: "{{ admin_password }}"
    server_url: "https://localhost"
    validate_certs: false
    resource: repository_sets
    organization: "{{ organization }}"
    search: label="{{ item }}"
  register: data
  tags:
    - reposets
    - "4"

- name: Enable repos
  include_tasks: "{{ role_path }}/tasks/enable_repos.yaml"
  loop: "{{ data.results }}"
  loop_control:
    loop_var: result
  tags:
    - reposets
    - "4"

- name: Get Additional Repository Set info
  with_items: "{{ additional_redhat_repos }}"
  theforeman.foreman.resource_info:
    username: "{{ admin_username }}"
    password: "{{ admin_password }}"
    server_url: "https://localhost"
    validate_certs: false
    resource: repository_sets
    organization: "{{ organization }}"
    search: label="{{ item }}"
  register: data
  tags:
    - reposets
    - "4"

- name: Enable Additional RH repos
  include_tasks: "{{ role_path }}/tasks/enable_repos.yaml"
  loop: "{{ data.results }}"
  loop_control:
    loop_var: result
  tags:
    - reposets
    - "4"

- name: Get all enabled products
  theforeman.foreman.resource_info:
    username: "{{ admin_username }}"
    password: "{{ admin_password }}"
    server_url: "https://localhost"
    validate_certs: false
    resource: products
    organization: "{{ organization }}"
  register: products
  tags:
    - syncplan
    - "4"

- name: Create daily sync plan and assign to all products
  theforeman.foreman.sync_plan:
    username: "{{ admin_username }}"
    password: "{{ admin_password }}"
    server_url: "https://localhost"
    validate_certs: false
    name: "Daily Sync"
    organization: "{{ organization }}"
    interval: "daily"
    enabled: true
    sync_date: "2022-01-01 00:00:00 UTC"
    products: "{{ products | json_query('resources[?repository_count > `0`].name') }}"
    state: present
  tags:
    - syncplan
    - "4"

- name: Sync the repositories (very long process)
  theforeman.foreman.repository_sync:
    username: "{{ admin_username }}"
    password: "{{ admin_password }}"
    server_url: "https://localhost"
    validate_certs: false
    product: "{{ item }}"
    organization: "{{ organization }}"
  with_items: "{{ products | json_query('resources[?repository_count > `0`].name') }}"
  tags:
    - sync

- name: Create lifecycles
  theforeman.foreman.lifecycle_environment:
    username: "{{ admin_username }}"
    password: "{{ admin_password }}"
    server_url: "https://localhost"
    validate_certs: false
    organization: "{{ organization }}"
    name: "{{ item.name }}"
    label: "{{ item.name | lower }}"
    prior: "{{ item.prior }}"
    state: "present"
  with_items: "{{ lifecycles }}"
  tags:
    - lifecycle
    - "5"

- name: Get all repositories
  theforeman.foreman.repository_info:
    username: "{{ admin_username }}"
    password: "{{ admin_password }}"
    server_url: "https://localhost"
    validate_certs: false
    organization: "{{ organization }}"
    product: "{{ item }}"
  with_items: "{{ products | json_query('resources[?repository_count > `0`].name') }}"
  register: all_repos
  tags:
    - content_view
    - "6"

- name: Create Everything Content View
  theforeman.foreman.content_view:
    username: "{{ admin_username }}"
    password: "{{ admin_password }}"
    server_url: "https://localhost"
    validate_certs: false
    organization: "{{ organization }}"
    name: "Everything"
    repositories: "{{ (all_repos | json_query('results[*].repositories[*].{ name: name, product: product.name }'))[0] }}"
  register: CV_changed
  tags:
    - content_view
    - "6"

- name: Publish new version of Everything Content View
  when: CV_changed.changed
  theforeman.foreman.content_view_version:
    username: "{{ admin_username }}"
    password: "{{ admin_password }}"
    server_url: "https://localhost"
    validate_certs: false
    organization: "{{ organization }}"
    content_view: "Everything"
    lifecycle_environments:
      - Library
  tags:
    - content_view
    - "6"

- name: Configure Compute Resources
  theforeman.foreman.compute_resource:
    state: present
    username: "{{ admin_username }}"
    password: "{{ admin_password }}"
    server_url: "https://localhost"
    validate_certs: false
    name: "{{ item.name }}"
    locations:
      - "{{ location }}"
    organizations:
      - "{{ organization }}"
    provider: "{{ item.type }}"
    provider_params: "{{ item.provider_params }}"
  loop: "{{ compute_resources }}"
  tags:
    - compute_resources
    - "7"
    
- name: Create host groups
  theforeman.foreman.hostgroup:
    username: "{{ admin_username }}"
    password: "{{ admin_password }}"
    server_url: "https://localhost"
    validate_certs: false
    organization: "{{ organization }}"
    name: "{{ item.name }}"
    architecture: "x86_64"
    state: present
    parent: "{{ item.parent | default(omit) }}"
    lifecycle_environment: "{{ item.lifecycle | default(omit) }}"
  loop: "{{ host_groups }}"
  tags:
    - hostgroups
    - "8"

#TODO: Set httpboot server
- name: Configure subnets
  with_items: "{{ subnets }}"
  theforeman.foreman.subnet:
    name: "{{ item.name }}"
    description: "{{ item.description }}"
    network: "{{ item.network }}"
    cidr: "{{ item.cidr }}"
    gateway: "{{ item.gateway }}"
    from_ip: "{{ item.dhcp_start }}"
    to_ip: "{{ item.dhcp_end }}"
    boot_mode: "{{ item.dhcp_mode }}"
    dhcp_proxy: "{{ item.dhcp_server }}"
    tftp_proxy: "{{ item.tftp_server | default(item.dhcp_server) }}"
    dns_proxy: "{{ item.dns_server | default(omit) }}"
    dns_primary: "{{ item.dns_servers[0] | default(omit) }}"
    dns_secondary: "{{ item.dns_servers[1] | default(omit) }}"
    template_proxy: "{{ item.template_server | default(item.dhcp_server) }}"
    vlanid: "{{ item.vlan_id | default(omit) }}"
    mtu: "{{ item.mtu | default(1500) }}"
    domains: "{{ item.domains }}"
    organizations:
    - "{{ organization }}"
    locations:
    - "{{ location }}"
    username: "{{ admin_username }}"
    password: "{{ admin_password }}"
    server_url: "https://localhost"
    validate_certs: false
    state: present

- name: Copy Ansible roles
  ansible.builtin.copy:
    src: ansible/roles/
    dest: /etc/ansible/roles/

- name: Copy Puppet modules
  ansible.builtin.copy:
    src: puppet/modules/
    dest: /etc/puppetlabs/code/environments/production/modules/

- name: Create Job Patch Machines
  theforeman.foreman.job_template:
    username: "{{ admin_username }}"
    password: "{{ admin_password }}"
    server_url: "https://localhost"
    validate_certs: false
    name: Patch Machines
    file_name: jobs/patch.yaml
    state: present
    locations:
    - {{ location }}
    organizations:
    - {{ organization }}